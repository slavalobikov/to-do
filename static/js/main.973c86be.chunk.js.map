{"version":3,"sources":["App.module.css","Components/InputToDo/InputToDo.module.css","Components/ToDo/ToDo.module.css","Redux/Reducers/ToDoReducer.js","Components/InputToDo/InputToDo.jsx","Components/ToDo/ToDo.jsx","App.js","reportWebVitals.js","Redux/Redux.jsx","index.js"],"names":["module","exports","ADD_Z","DELETE_TODO","TOOGGLE_TODO_IS_DONE","EDIT_TODO","initialState","z","ToDoReducer","state","action","type","Text","id","isCheck","text","isDone","isEdit","filter","item","map","u","edit","compose","connect","AddZ","props","IdNewMessage","useState","value","setValue","length","addToDo","className","s","addField","onChange","e","currentTarget","placeholder","onKeyDown","keyCode","onClick","addBtn","DeleteToDO","TooggleIsDoneTrue","EditToDO","isEditValue","setIsEdit","editToDoMessage","isEditValueF","isEditF","td","ToDoElements","leha","radioTrue","radioFalse","cn","Main","textFalse","onBlur","autoFocus","btnHover","delete","DeleteOutlined","FormOutlined","dima","App","app","main","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","persistConfig","key","storage","whitelist","pReducer","persistReducer","middleware","applyMiddleware","thunk","store","createStore","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.973c86be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2gBnF\",\"main\":\"App_main__1SWCl\",\"logo\":\"App_logo__NwyvL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addField\":\"InputToDo_addField__cJQVH\",\"addBtn\":\"InputToDo_addBtn__3igV9\",\"MainBlockHiden\":\"InputToDo_MainBlockHiden__3TtUQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leha\":\"ToDo_leha__3jLoC\",\"Main\":\"ToDo_Main__1CORu\",\"delete\":\"ToDo_delete__1gObl\",\"item\":\"ToDo_item__10Wb1\",\"marginTop\":\"ToDo_marginTop__N0BK_\",\"radioFalse\":\"ToDo_radioFalse__j-jOF\",\"radioTrue\":\"ToDo_radioTrue__elsrk\",\"textFalse\":\"ToDo_textFalse__1Q98I\",\"DeleteAll\":\"ToDo_DeleteAll__1qG6q\",\"MainBlock\":\"ToDo_MainBlock__3BjNg\",\"SaveAll\":\"ToDo_SaveAll__SRi2A\",\"PreloaderBlock\":\"ToDo_PreloaderBlock__1GTyO\",\"preloader\":\"ToDo_preloader__15hIZ\",\"MainBlockHiden\":\"ToDo_MainBlockHiden__1VTUy\",\"mainPopup\":\"ToDo_mainPopup__3h1sL\",\"popup\":\"ToDo_popup__3pFkp\",\"info\":\"ToDo_info__1bzwv\",\"UpdateAll\":\"ToDo_UpdateAll__VT6wv\"};","const ADD_Z = 'ADD_Z';\r\nconst DELETE_TODO = 'DELETE_TODO';\r\nconst TOOGGLE_TODO_IS_DONE = 'TOOGGLE_TODO_IS_DONE';\r\nconst EDIT_TODO = 'EDIT_TODO';\r\n\r\nlet initialState = {\r\n    z : [\r\n\r\n    ],\r\n}\r\n\r\nconst ToDoReducer =(state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_Z:\r\n            let Text = {\r\n                id:action.id,\r\n                isCheck: false,\r\n                text:action.text,\r\n                isDone: false,\r\n                isEdit:false,\r\n            };\r\n            return {\r\n                ...state,\r\n                z: [...state.z, Text]\r\n            }\r\n        case DELETE_TODO:\r\n\r\n            return {\r\n                ...state,\r\n                z: state.z.filter(item => item.id !== action.id)\r\n            };\r\n        case TOOGGLE_TODO_IS_DONE:\r\n            return {\r\n                ...state,\r\n                z: state.z.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, isDone:!action.isDone}\r\n                    } else {\r\n                        return  {...u}\r\n                    }\r\n                })\r\n            };\r\n        case EDIT_TODO:\r\n            return  {\r\n                ...state,\r\n                z: state.z.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, text:action.text, isEdit: !action.edit}\r\n                    } else {\r\n                        return  {...u}\r\n                    }\r\n                })\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const AddZ = (text, id) => ({type: ADD_Z, text, id })\r\nexport const DeleteToDO = (id, ) => ({type: DELETE_TODO, id});\r\nexport const TooggleIsDoneTrue = (id, isDone) => ({type: TOOGGLE_TODO_IS_DONE, id,isDone});\r\nexport const EditToDO = (id, text, edit) => ({type: EDIT_TODO, id, text, edit});\r\n\r\n\r\n\r\n\r\n\r\nexport default ToDoReducer;","import React, {useState} from 'react';\r\n\r\nimport s from \"./InputToDo.module.css\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {AddZ} from \"../../Redux/Reducers/ToDoReducer\";\r\n\r\n\r\nconst InputToDo = (props) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    let IdNewMessage;\r\n\r\n    if (!props.z[0]) {\r\n        IdNewMessage = 1;\r\n    } else {\r\n        IdNewMessage = props.z[props.z.length - 1].id + 1;\r\n    }\r\n\r\n    const addToDo = () => {\r\n\r\n        if (!value) {\r\n            return\r\n        }\r\n\r\n        props.AddZ(value, IdNewMessage, IdNewMessage );\r\n        setValue('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n               <div  className={s.addField}>\r\n                    <input type=\"text\"\r\n                           value={value}\r\n                           onChange={(e) => {setValue(e.currentTarget.value)}}\r\n                           placeholder={'Введите свою задачу'}\r\n                           onKeyDown={(e) => { if (e.keyCode === 13) {\r\n                                   addToDo()\r\n                               }}\r\n                           }\r\n\r\n                    />\r\n                    <button onClick={() => {addToDo()}}  className={s.addBtn}>+</button>\r\n                </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        z: state.ToDoReducer.z,\r\n\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        AddZ,\r\n    }),\r\n) (InputToDo);\r\n\r\n","import React, {useState} from 'react';\r\nimport s from './ToDo.module.css'\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport cn from 'classnames'\r\nimport {DeleteOutlined, FormOutlined} from '@ant-design/icons';\r\nimport {DeleteToDO, EditToDO, TooggleIsDoneTrue} from \"../../Redux/Reducers/ToDoReducer\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ToDo = (props) => {\r\n    const [isEditValue, setIsEdit] = useState('');\r\n\r\n    const editToDoMessage = (id, isEditValueF, isEditF, td) => {\r\n        if (!isEditValue && td === '' ) {\r\n            props.DeleteToDO(id)\r\n        }\r\n\r\n        props.EditToDO(id, isEditValueF, isEditF);\r\n        setIsEdit(td);\r\n\r\n\r\n\r\n    };\r\n\r\n    let ToDoElements = props.z.map(td => (\r\n        <div\r\n            key={td.id}>\r\n            <div className={s.item}>\r\n                <div className={s.leha}>\r\n                    {td.isDone\r\n                        ? <button onClick={() =>\r\n                        {props.TooggleIsDoneTrue(td.id, td.isDone)}} className={s.radioTrue} ></button>\r\n                        : <button onClick={() =>\r\n                        {props.TooggleIsDoneTrue(td.id, td.isDone)}} className={s.radioFalse}></button>}\r\n                    <span className={cn(s.Main, {\r\n                        [s.textFalse]: td.isDone === true\r\n                    })}>\r\n                    {td.isEdit\r\n                    && <input type=\"text\"\r\n                              onBlur={() => { editToDoMessage(td.id, isEditValue, td.isEdit, td.text)}}\r\n                              onChange={(e) => {setIsEdit(e.currentTarget.value)}}\r\n                              onKeyDown={(e) => {\r\n                                  if (e.keyCode === 13 || e.keyCode === 27 ) {\r\n                                      editToDoMessage(td.id, isEditValue, td.isEdit, td.text)\r\n                              }}}\r\n                              value={td.text || isEditValue} autoFocus={true}\r\n                    />}\r\n                        {!td.isEdit && <span>{td.text}</span>}\r\n\r\n                </span>\r\n                </div>\r\n\r\n                <div className={s.btnHover}>\r\n                    <span onClick={() => { props.DeleteToDO(td.id)}}\r\n                          className={s.delete}><DeleteOutlined /></span>\r\n                    {!td.isEdit &&\r\n                    <span onClick={() => { editToDoMessage(td.id, isEditValue, td.isEdit, td.text)} }\r\n                          className={s.delete}><FormOutlined /></span>}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    ));\r\n\r\n    return (\r\n        <div className={s.dima}>\r\n            {ToDoElements}\r\n        </div>\r\n    );\r\n};\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        z: state.ToDoReducer.z,\r\n\r\n\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        DeleteToDO,\r\n        TooggleIsDoneTrue,\r\n        EditToDO\r\n    }),\r\n) (ToDo);","import s from  './App.module.css';\nimport InputToDo from \"./Components/InputToDo/InputToDo\";\nimport ToDo from \"./Components/ToDo/ToDo\";\n\nfunction App() {\n  return (\n      <div className={s.app}>\n          <div className={s.main}>\n              <div className={s.logo}>\n                  <span>Список задач</span>\n              </div>\n              <InputToDo />\n              <ToDo />\n          </div>\n\n      </div>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport ToDoReducer from \"./Reducers/ToDoReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    ToDoReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n    key: 'toDo',\r\n    storage: storage,\r\n    whitelist: ['ToDoReducer'] // which reducer want to store\r\n};\r\nconst pReducer = persistReducer(persistConfig, reducers);\r\nconst middleware = applyMiddleware(thunk);\r\nconst store = createStore(pReducer, middleware);\r\nconst persistor = persistStore(store);\r\nexport { persistor, store };\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from \"./Redux/Redux\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n    <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}